package dungeonSite;

import javax.persistence.Cacheable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;


//@Cacheable
//@Cache(usage=CacheConcurrencyStrategy.READ_ONLY)
@Entity
@Table(name = "\"users\"")
public class User {
	@Id
	@Column(name = "id")
	private Long userID;
	@Column(name = "username")
	private String username;
	@Column(name = "password")
	private String password;
	@Column(name = "firstname")
	private String firstname;
	@Column(name = "lastname")
	private String lastname;
	@Column(name = "email")
	private String email;
	
	public User() 
	{
		
	}
	//used when creating an acct?
	public User(Long id, String user, String pswd)
	{
		this.userID = id;
		this.username = user;
		this.password = pswd;
		this.firstname = "";
		this.lastname = "";
		this.email = "";
	}
	//used when loading
	public User(Long id, String user, String pswd,String fn, String ln, String e)
	{
		this.userID = id;
		this.username = user;
		this.password = pswd;
		this.firstname = fn;
		this.lastname = ln;
		this.email = e;
	}
	public Long getUserID()
	{
		return this.userID;
	}
	public Long setUserID(Long id)
	{
		return this.userID = id;
	}
	public String getUsername()
	{
		return this.getUsername();
	}
	//probably not going to be used? since username might become an immutable, unless we associate a login with email/2 factor
	public String setUsername(String u)
	{
		return this.username = u;
	}
	public String getPassword()
	{
		
	}
}
